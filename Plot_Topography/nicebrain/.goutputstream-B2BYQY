function plotusingmatlab(pathToSubjectDir, subjectID, pathToCorticalSurfacesDir, pathToFsInstallDirectory, pathToVolume, scriptDirectory, pathToElectrodes)
%
% This function uses the results of nicebrain() (a segmentation,
% coregistered CT and MRI scans, and a .mat file containing ordered 
% electrodes to create a MATLAB figure of the subject using activateBrain.
% It also saves the results in a .mat file that is compatible with
% activateBrain use. The .mat file is placed in the MATLAB subdirectory of
% the subject directory.
%
% The matlab/ directory of the your freesurfer installation must be on the
% path.
%
% pathToSubjectDir should be the absolute path up to and including the 
% subject directory (not the one in freesurfer)
% e.g.: /Desktop/brains/subject017
% 
% subjectID is ID of your subject that will be saved as a .mat file. Pick a
% new subject ID if you don't want the data from a previous run to be
% overwritten.
% e.g.: subject017
%
% pathToCorticalSurfacesDir should be the path to the directory containing
% the rh.pial and lh.pial files.
%
% pathToFsInstallDirectory should be the absolute path up of the freesurfer
% installation directory, not including freesurfer/.
% e.g.: /Applications
%
% pathToVolume should be a path up to and including the orig.mgz volume located in
% <pathToFsInstallDirectory>/freesurfer/subjects/<subjectID>/mri/ or
% wherever you have put the results of the subject's segmentation.
% e.g.: /Applications/freesurfer/subjects/subject22/mri/orig.mgz
%
% scriptDirectory is the directory in which this script is placed.
% e.g.: '/Users/ncollisson/Dropbox/brainresearch'
% This script should be kept in the same directory as the other files that
% come with this package.
%
% pathtoelecs is the path to the electrodes you want to plot on the brain.
% This is probably either <subjdir>/Electrodes/electrodes.mat or
% <subjdir>/Electrodes/projelectrodes.mat
%
% The data structure produced looks like one below:
% 
% subject
% \_ .cortex
%    \_ .tri
%    \_ .vert
% \_ .tala
%    \_ .electrodes
%
% When it is this way it works easily with the plotbrainfunction
% 
% plotbrainfunction will then save the data in the standard activateBrain
% format

% check to make sure arguments exist
if ~exist(pathToSubjectDir, 'dir')
    disp(pathToSubjectDir);
    disp('Subject directory does not exist');
    return;
end

if ~exist(pathToCorticalSurfacesDir, 'dir')
    disp(pathToCorticalSurfacesDir);
    disp('Directory containing cortical surfaces does not exist');
    return;
end

if ~exist(pathToFsInstallDirectory, 'dir')
    disp(pathToFsInstallDirectory);
    disp('Directory containing freesurfer does not exist');
    return;
end

if ~exist(pathToVolume, 'file')
    disp(pathToVolume);
    disp('Volume does not exist');
    return;
end

if ~exist(scriptDirectory, 'dir')
    disp(scriptDirectory);
    disp('Script directory does not exist');
    return;
end

if ~exist(pathToElectrodes, 'file')
    disp(pathToElectrodes);
    disp('Electrodes file does not exist');
    return;
end

% set path to and load subject electrodes into tempelec
% pathToElectrodes = strcat(pathToSubjectDir, '/Electrodes/electrodes.mat');
%tempelec = load(pathToElectrodes);
tempelec_dat = importelectrodes(pathToElectrodes);
tempelec.elecMatrix = tempelec_dat;

% run a shell script to obtain transformation matrices to get electrodes
% into the same coordinate system as the brain
shellcommand = [scriptDirectory '/get_xfrm_matrices.sh ' pathToFsInstallDirectory ' ' pathToVolume ' ' pathToSubjectDir '&'];
system(shellcommand);
pause(3);

% load the transform matrices generated by the shell script
mkdir(strcat(pathToSubjectDir, '/MATLAB/'));
path_to_xfrm_matrices = strcat(pathToSubjectDir, '/MATLAB/xfrm_matrices'); 
xfrm_matrices = importdata(path_to_xfrm_matrices);

% move the transform matrices into their own variables
Norig = xfrm_matrices(1:4, :);
Torig = xfrm_matrices(5:8, :);

%%%%%%%%%%%%%%%%%%%%%%%%% Peter's Code %%%%%%%%%%%%%%%%%%%%%%%%%
% Performs transformation on electrodes to get them into the same
% coordinate system as the surface. freeview automatically corrects the
% difference when the electrodes are loaded into freeview, but in order to
% plot the electrodes correctly in MATLAB, the transformation is needed.

tala.electrodes = tempelec.elecMatrix;

% apply xfrm matrices to electrodes
tala.electrodes = (Torig*inv(Norig)*[tala.electrodes(:, 1), tala.electrodes(:, 2), tala.electrodes(:, 3), ones(size(tala.electrodes, 1), 1)]')';

tala.electrodes = tala.electrodes(:, 1:3);

%%%%%%%%%%%%%%%%%%%%%%% End Peter's Code %%%%%%%%%%%%%%%%%%%%%%%

subject.tala.electrodes = tala.electrodes;

pathToLhPial = strcat(pathToCorticalSurfacesDir, '/lh.pial');
pathToRhPial = strcat(pathToCorticalSurfacesDir, '/rh.pial');

% make sure that the matlab folder inside the freesurfer folder is on the
% matlab path or else read_surf will be missing
[LHtempvert, LHtemptri] = read_surf(pathToLhPial);
[RHtempvert, RHtemptri] = read_surf(pathToRhPial);

% references to vert matrix must be 1-based
LHtemptri = LHtemptri + 1;
RHtemptri = RHtemptri + 1;

% all RH verts come after all LH verts
adjustedRHtemptri = RHtemptri + size(LHtempvert, 1);

% put all verts in same matrix, RH after LH
subject.cortex.vert = [LHtempvert; RHtempvert];

% put all tris in same matrix, with corrected RH tris
subject.cortex.tri = [LHtemptri; adjustedRHtemptri];

activations = zeros(size(tempelec.elecMatrix, 1), 1);

plotbrainfunction(subject.cortex.vert, subject.cortex.tri, subject.tala.electrodes, activations, subjectID, pathToSubjectDir);

end
